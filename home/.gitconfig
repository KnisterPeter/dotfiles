[user]
	name = Markus Wolf
	email = mail@markus-wolf.de
	signingkey = 46051C9BE153B7A5
[color]
	branch = auto
	diff = auto
	status = auto
[core]
	#editor = code --wait
	editor = vim
[push]
	default = simple
[alias]
	# log with graph
	ls = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	la = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# log without merges
	lsnm = ls --no-merges
	# log branch + parents
	lsbo = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --first-parent
	ln = log --oneline
	
	st = status
	grep = grep -Ii

	amend = commit --amend --no-edit
	amend-all = "!f() { git add . && git amend; }; f"
	amend-all-force-push = "!f() { git amend-all && git fpush; }; f"

	show-commit = "!f() { . $(dirname $(dirname $(readlink -f \"$HOME/.gitconfig\")))/functions/git.sh ; __git_show_commit ; }; f"
	show-files = "!f() { . $(dirname $(dirname $(readlink -f \"$HOME/.gitconfig\")))/functions/git.sh ; __git_show_files ; }; f"

	fixup-select-commit = "!f() { . $(dirname $(dirname $(readlink -f \"$HOME/.gitconfig\")))/functions/git.sh ; __git_fixup_select_commit ; }; f"
	fixup-rebase-branch = "!f() { . $(dirname $(dirname $(readlink -f \"$HOME/.gitconfig\")))/functions/git.sh ; __git_fixup_rebase_branch $1 ; }; f"
	rebase-interactive = "!f() { . $(dirname $(dirname $(readlink -f \"$HOME/.gitconfig\")))/functions/git.sh ; __git_rebase_interactive ; }; f"
	rebase-change-parent = "!f() { . $(dirname $(dirname $(readlink -f \"$HOME/.gitconfig\")))/functions/git.sh ; __git_rebase_change_parent $1 ; }; f"

	wip-save = "!f() { git add . && git wip-save-staged; }; f" 
	wip-save-staged = "!f() { git commit -m 'wip: ...' --no-verify; }; f" 
	wip-restore = "!f() { [ $(git log --oneline -1 --grep='wip:' |wc -l) -gt 0 ] && git reset HEAD~1 || echo 'No work-in-progress found on branch'; }; f"

	fpush = push --force-with-lease

	patch-url = "!f() { curl -L "$1" | git am -3; }; f"

[commit]
	gpgSign = true
	verbose = true
	template = /home/markusw/.gitmessage
[pull]
	rebase = true
[rebase]
	autoStash = true

[init]
	defaultBranch = main

[includeIf "gitdir:~/source/xing/**"]
	path = .gitconfig.private.xing
